syntax = "proto3";
package api;
option go_package = "github.com/APCS20-Thesis/Backend/api";

import "google/rpc/code.proto";
import "google/api/annotations.proto";
import "google/protobuf/wrappers.proto";
import "data.proto";
import "validate/validate.proto";

service CDPService {
  rpc CheckHealth(CheckHealthRequest) returns (CommonResponse) {
    option (google.api.http) = {
      get: "/health"
    };
  }

  rpc Login(LoginRequest) returns (LoginResponse) {
    option (google.api.http) = {
      post : "/api/v1/auth/login"
      body : "*"
    };
  }

  rpc SignUp(SignUpRequest) returns (CommonResponse) {
    option (google.api.http) = {
      post : "/api/v1/auth/sign-up"
      body : "*"
    };
  }

  rpc GetAccountInfo(GetAccountInfoRequest) returns (GetAccountInfoResponse) {
    option (google.api.http) = {
      get : "/api/v1/auth/me"
    };
  }

  rpc GetListDataSources(GetListDataSourcesRequest) returns (GetListDataSourcesResponse){
    option (google.api.http) = {
      get: "/api/v1/data-source/data-sources"
    };
  }

  rpc GetDataSource(GetDataSourceRequest) returns (GetDataSourceResponse){
    option (google.api.http) = {
      get: "/api/v1/data-source/data-source/{id}"
    };
  }

  rpc GetListDataTables(GetListDataTablesRequest) returns (GetListDataTablesResponse){
    option (google.api.http) = {
      get: "/api/v1/data-source/data-tables"
    };
  }

  rpc GetDataTable(GetDataTableRequest) returns (GetDataTableResponse){
    option (google.api.http) = {
      get: "/api/v1/data-source/data-table/{id}"
    };
  }

  rpc GetConnection(GetConnectionRequest) returns (GetConnectionResponse){
    option (google.api.http) = {
      get: "/api/v1/data-source/connection/{id}"
    };
  }
  rpc GetListConnections(GetListConnectionsRequest) returns (GetListConnectionsResponse){
    option (google.api.http) = {
      get: "/api/v1/data-source/connections"
    };
  }
  rpc CreateConnection(CreateConnectionRequest) returns (CreateConnectionResponse){
    option (google.api.http) = {
      post: "/api/v1/data-source/connection"
      body: "*"
    };
  }
}

// CheckHealthRequest
message CheckHealthRequest { }

//*****************************************//
// Authentication
//*****************************************//

// LoginRequest
message LoginRequest {
  // username
  string username = 1 [(validate.rules).string.min_len = 1];
  // password
  string password = 2 [(validate.rules).string.min_len = 8];
}

// LoginResponse
message LoginResponse {
  // code
  int32 code = 1;
  // message
  string message = 2;
  // access_token
  string access_token = 3;
  // account
  Account account = 4;
}

// Signup Request
message SignUpRequest {
  // username
  string username = 1 [(validate.rules).string.min_len = 1];
  // password
  string password = 2 [(validate.rules).string.min_len = 8];
  // first_name
  string first_name = 3 [(validate.rules).string.min_len = 1];
  // last_name
  string last_name = 4 [(validate.rules).string.min_len = 1];
  // email
  string email = 5 [(validate.rules).string.email = true];
}

// GetAccountInfo Request
message GetAccountInfoRequest { }

// GetAccountInfo Response
message GetAccountInfoResponse {
  // code
  int32 code = 1;
  // message
  string message = 2;
  // account
  Account account = 3;
}

// Common Response
message CommonResponse {
  // code
  int32 code = 1;
  // message
  string message = 2;
}

// ImportFile Request
message  ImportFileRequest {
  // file_type
  string file_type = 1 [(validate.rules).string.min_len = 1];
  // file_name
  string file_name = 2 [(validate.rules).string.min_len = 1];
  // file_size
  int64 file_size = 3;
  // mapping option
  map<string, string> mapping_options = 4;
  // configuration
  ImportCsvConfigurations configurations = 5;
  // file_content
  bytes file_content = 6;
  // delta_table_name
  string delta_table_name = 7 [(validate.rules).string.min_len = 1];
  // name
  string name = 8 [(validate.rules).string.min_len = 1];
  // description
  string description = 9;
}

// ImportFile Response
message ImportFileResponse {
  // code
  int32 code = 1;
  //message
  string message = 2;
}

// GetListDataSources Request
message GetListDataSourcesRequest {
  // data_source type
  string type = 1;
  // name
  string name = 2;
}

// GetListDataSources Response
message GetListDataSourcesResponse {
  // code
  int32 code = 1;
  // count
  int64 count = 2;
  // results list
  repeated DataSource results = 3;

  message DataSource {
    // id
    int64 id = 1;
    // name
    string name = 2;
    // data_source type
    string type = 3;
    // updated_at
    string updated_at = 4;
  }

}

// GetDataSource Request
message GetDataSourceRequest {
  // id
  int64 id = 1 [(validate.rules).int64.gte = 1];
}

// GetDataSource Response
message GetDataSourceResponse {
  // code
  int32 code = 1;
  // id
  int64 id = 2;
  // name
  string name = 3;
  // data_source type
  string type = 4;
  // description
  string description = 6;
  // created_at
  string created_at = 7;
  // updated_at
  string updated_at = 8;
  // configurations
  map<string, string>configurations = 9;
  // mapping_options
  map<string, string> mapping_options = 10;
}

// GetListDataTables Request
message GetListDataTablesRequest {
  // name
  string name = 1;
}

// GetListDataSource Response
message GetListDataTablesResponse {
  // code
  int32 code = 1;
  // count
  int64 count = 2;
  // results list
  repeated DataTable results = 3;

  message DataTable {
    // id
    int64 id = 1;
    // name
    string name = 2;
    // created_at
    string created_at = 3;
    // updated_at
    string updated_at = 4;
  }
}

// GetDataTable Request
message GetDataTableRequest {
  // id
  int64 id = 1 [(validate.rules).int64.gte = 1];
}

// GetDataTable Response
message GetDataTableResponse {
  // code
  int32 code = 1;
  // id
  int64 id = 2;
  // name
  string name = 3;
  // created_at
  string created_at = 4;
  // updated_at
  string updated_at = 5;
  // schema
  map<string, string> schema = 6;
}


// CreateConnection Request
message CreateConnectionRequest {
  // name
  string name = 1 [(validate.rules).string.min_len = 1];
  // type
  string type = 2 [(validate.rules).string.min_len = 1];
  // configurations
  map<string,string> configurations = 3;
}

// CreateConnection Response
message CreateConnectionResponse {
  // code
  int32 code = 1;
  // message
  string message = 2;
}

// GetListConnections Request
message GetListConnectionsRequest {
  // type
  string type = 1 [(validate.rules).string.min_len = 1];
  // name
  string name = 2 [(validate.rules).string.min_len = 1];
}

// GetListConnections Response
message GetListConnectionsResponse {
  // code
  int32 code = 1;
  // count
  int64 count = 2;
  // results list
  repeated Connection results = 3;

  message Connection {
    // id
    int64 id = 1;
    // name
    string name = 2;
    // updated_at
    string updated_at = 3;
  }
}

// GetConnection Request
message GetConnectionRequest {
  // id
  int64 id = 1 [(validate.rules).int64.gte = 1];
}

// GetConnection Response
message GetConnectionResponse {
  // code
  int32 code = 1;
  // id
  int64 id = 2;
  // name
  string name = 3;
  // created_at
  string created_at = 4;
  // updated_at
  string updated_at = 5;
  // schema
  map<string, string> configurations = 6;
}